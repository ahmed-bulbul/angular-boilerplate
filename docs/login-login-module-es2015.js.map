{"version":3,"sources":["./src/app/login/login/login.component.css","./src/app/login/register/register.component.css","./src/app/login/login/login.component.html","./src/app/login/login.module.ts","./src/app/login/register/register.component.html","./src/app/login/login-routing.module.ts","./src/app/login/login/login.component.ts","./src/app/login/register/register.component.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["export default \".custom-button{\\r\\n  background: linear-gradient(to right, #0a6323 0%, #de0f0f 100%);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwrREFBK0Q7QUFDakUiLCJmaWxlIjoibG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jdXN0b20tYnV0dG9ue1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgIzBhNjMyMyAwJSwgI2RlMGYwZiAxMDAlKTtcclxufVxyXG4iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"account-content\\\">\\n  <!-- <a routerLink=\\\"/login/joblist\\\" class=\\\"btn btn-primary apply-btn\\\">Apply Job</a> -->\\n  <div class=\\\"container\\\">\\n\\n    <!-- Account Logo -->\\n    <div class=\\\"account-logo\\\">\\n      <a href=\\\"javascript:\\\"><img src=\\\"assets/img/logo2.png\\\" alt=\\\"Walton Digi-Tech Industries Ltd \\\"></a>\\n    </div>\\n    <!-- /Account Logo -->\\n\\n    <div class=\\\"account-box\\\">\\n      <div class=\\\"account-wrapper\\\">\\n        <h3 class=\\\"account-title\\\">Login</h3>\\n        <p class=\\\"account-subtitle\\\">Welcome to Cencus Ticket Support</p>\\n\\n        <!-- Account Form -->\\n        <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"myForm\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Username</label>\\n            <input class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': formSubmitted && f.username.errors }\\\"\\n              formControlName=\\\"username\\\" type=\\\"text\\\">\\n            <div *ngIf=\\\"formSubmitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\">\\n                <label>Password</label>\\n              </div>\\n            </div>\\n            <input class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': formSubmitted && f.password.errors }\\\"\\n              formControlName=\\\"password\\\" formControlName=\\\"password\\\" type=\\\"password\\\">\\n            <div *ngIf=\\\"formSubmitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n              <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 4 characters</div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group text-center\\\">\\n            <button class=\\\"btn btn-primary account-btn custom-button\\\" type=\\\"submit\\\">Login</button>\\n          </div>\\n          <div class=\\\"account-footer\\\">\\n            <!-- <p>Don't have an account yet? <a routerLink=\\\"/login/register\\\">Register</a></p> -->\\n          </div>\\n        </form>\\n        <!-- /Account Form -->\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<ngx-spinner bdColor = \\\"rgba(255,255,255,0.5)\\\" size = \\\"medium\\\" color = \\\"#667eea\\\" type = \\\"ball-clip-rotate\\\" [fullScreen] = \\\"false\\\"><p style=\\\"color: black\\\" > Processing... </p></ngx-spinner>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { RegisterComponent } from './register/register.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    HttpClientModule,\n    NgxSpinnerModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class LoginModule { }\n","export default \"<!-- Main Wrapper -->\\n<div class=\\\"main-wrapper\\\">\\n    <div class=\\\"account-content\\\">\\n        <a routerLink = \\\"/login/joblist\\\" class=\\\"btn btn-primary apply-btn\\\">Apply Job</a>\\n        <div class=\\\"container\\\">\\n\\n            <!-- Account Logo -->\\n            <div class=\\\"account-logo\\\">\\n                <a routerLink=\\\"/dashboard\\\"><img src=\\\"assets/img/logo2.png\\\" alt=\\\"Dreamguy's Technologies\\\"></a>\\n            </div>\\n            <!-- /Account Logo -->\\n\\n            <div class=\\\"account-box\\\">\\n                <div class=\\\"account-wrapper\\\">\\n                    <h3 class=\\\"account-title\\\">Register</h3>\\n                    <p class=\\\"account-subtitle\\\">Access to our dashboard</p>\\n\\n                    <!-- Account Form -->\\n                    <form action=\\\"dashboard\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label>Email</label>\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>Password</label>\\n                            <input class=\\\"form-control\\\" type=\\\"password\\\">\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label>Repeat Password</label>\\n                            <input class=\\\"form-control\\\" type=\\\"password\\\">\\n                        </div>\\n                        <div class=\\\"form-group text-center\\\">\\n                            <button class=\\\"btn btn-primary account-btn\\\" type=\\\"submit\\\">Register</button>\\n                        </div>\\n                        <div class=\\\"account-footer\\\">\\n                            <p>Already have an account? <a routerLink = \\\"/login/login\\\">Login</a></p>\\n                        </div>\\n                    </form>\\n                    <!-- /Account Form -->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- /Main Wrapper -->\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nimport { RegisterComponent } from './register/register.component';\n\n\n\nconst routes: Routes = [\n    { path: '' , component: LoginComponent },\n    {path:'register',component:RegisterComponent},\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { delay } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Login } from '../model/login';\nimport { LoginService } from '../services/login.services';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public myForm: FormGroup;\n  public baseUrl = environment.baseUrl;\n  public formSubmitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private loginService: LoginService,\n    private router: Router,\n    private spinnerService:NgxSpinnerService\n  ) { }\n\n  ngOnInit() {\n    this._initForm();\n\n  }\n\n  // Initialize form function\n  _initForm(){\n    this.myForm=this.formBuilder.group({\n      username:[\"\",Validators.required],\n      password: ['', [Validators.minLength(4),  Validators.required]],\n    });\n  }\n\n  get f() { return this.myForm.controls; }\n  onSubmit(){\n    \n  }\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":"webpack:///"}